################################################################
# Bash prompt configuration, shamelessly adapted from 
# http://apwhelan.blogspot.co.uk/2012/08/bash-prompt-coloring.html 
# and
# https://github.com/mathiasbynens/dotfiles/blob/master/.bash_prompt
#
# See link for fill reference:
# http://bash-hackers.org/wiki/doku.php/scripting/terminalcodes
#
# \033 indicates a control character is to follow
#
# For full list, "man bash" and search to 2nd "PROMPTING" or see:
# http://tldp.org/HOWTO/Bash-Prompt-HOWTO/bash-prompt-escape-sequences.html
# also: http://www.yolinux.com/HOWTO/Bash-Prompt-HOWTO.html
#
# \u : username
# \h : host to first "."
# \w : current full working directory
# \W : last part of path

# ALL control sequences (i.e. non-printing characters)
# MUST start with a \[ and end with a \]. This tells
# the shell that these are control characters.
# One set of escaped brackets can be used for several
# in a row, but can be done for each alone as defined
# below. If this is not done the line wrap will not
# function properly (since the shell doesn't know how
# long the prompt is).

# See: http://networking.ringofsaturn.com/Unix/Bash-prompts.php
# for a longer list of colours.

NORM="\033[1;39m"
RED="\033[1;31m"
GREEN="\033[1;32m"
YELLOW="\033[1;33m"
BLUE="\033[1;34m"
PURPLE="\033[1;35m"
LIGHTBLUE="\033[1;36m"
WHITE_ON_BLUE="\033[37;44m"
BLUE_ON_WHITE="\033[1;34;47m"
RED_ON_WHITE="\033[1;31;47m"
WHITE_ON_GREEN="\033[1;37;42m"
WHITE_ON_RED="\033[1;37;41m"
BOLD=""
RESET="\033[m"


# Let the color of the hostname depend on the machine!
if [[ $HOSTNAME =~ uhppc11.* ]]; then
    HOSTCOL=$WHITE_ON_GREEN
elif [[ $HOSTNAME =~ stri-cluster.* ]]; then
    HOSTCOL=$WHITE_ON_RED
else
    HOSTCOL=$BLUE
fi


# Credit for these functions goes to
# https://github.com/mathiasbynens/dotfiles/blob/master/.bash_prompt
function parse_git_dirty() {
    [[ $(git status 2> /dev/null | tail -n1) != "nothing to commit, working directory clean" ]] && echo "*"
}

function parse_git_branch() {
    git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e "s/* \(.*\)/\1$(parse_git_dirty)/"
}

# actual command that sets prompt
#PS1="${PMPT_BOLD}${COL_RED}\h${NORM} [\w] %${PMPT_NORM} "
export PS1="\[${BOLD}${BLUE}\]\u\[$RESET\]@\[$HOSTCOL\]\h\[$RESET\]:\[${BOLD}${NORM}\]\w\[$RED\]\$([[ -n \$(git branch 2> /dev/null) ]] && echo \" #\")\$(parse_git_branch)\[$RESET\]\$ "
# For multi-line commands:
export PS2="\[$NORM\]â†’ \[$RESET\]"
